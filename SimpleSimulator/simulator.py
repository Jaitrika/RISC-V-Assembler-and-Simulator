import sys
import rtype as r
import btype as b
import bonus as bon
import itype as i   
import jtype as j
import stype as s
import utype as u
def db(decimal_num):
    if decimal_num < 0:
        abs_decimal = abs(decimal_num)
        complement = 2**32 - abs_decimal
    else:
        complement = decimal_num

    twos = bin(complement)[2:]
    
    if len(twos) < 32:
        twos = '0' * (32 - len(twos)) + twos

    return twos
rtype=["0110011"]
itype=["0000011","0010011","1100111"] 
btype=["1100011"]
jtype=["1101111"]
utype=["0110111","0010111"]
stype=["0100011"]
bonus=["0000000"]
datamem={'0x00010000': '00000000000000000000000000000000', '0x00010004': '00000000000000000000000000000000', '0x00010008': '00000000000000000000000000000000', '0x0001000c': '00000000000000000000000000000000', '0x00010010': '00000000000000000000000000000000', '0x00010014': '00000000000000000000000000000000', '0x00010018': '00000000000000000000000000000000', '0x0001001c': '00000000000000000000000000000000', '0x00010020': '00000000000000000000000000000000','0x00010024': '00000000000000000000000000000000', '0x00010028': '00000000000000000000000000000000', '0x0001002c': '00000000000000000000000000000000', '0x00010030': '00000000000000000000000000000000', '0x00010034': '00000000000000000000000000000000', '0x00010038': '00000000000000000000000000000000','0x0001003c': '00000000000000000000000000000000', '0x00010040': '00000000000000000000000000000000', '0x00010044': '00000000000000000000000000000000', '0x00010048': '00000000000000000000000000000000', '0x0001004c': '00000000000000000000000000000000', '0x00010050': '00000000000000000000000000000000', '0x00010054': '00000000000000000000000000000000', '0x00010058': '00000000000000000000000000000000', '0x0001005c': '00000000000000000000000000000000', '0x00010060': '00000000000000000000000000000000', '0x00010064': '00000000000000000000000000000000', '0x00010068': '00000000000000000000000000000000', '0x0001006c': '00000000000000000000000000000000', '0x00010070': '00000000000000000000000000000000', '0x00010074': '00000000000000000000000000000000', '0x00010078': '00000000000000000000000000000000', '0x0001007c': '00000000000000000000000000000000'}

d={}
fin=open(sys.argv[1])
fout=open(sys.argv[2],'w')
a=fin.readlines()
length=len(a)
pc=0
sam=a[pc//4]
x=0
while(pc//4<len(a) and sam!='00000000000000000000000001100011\n' and x <100):
    if(sam=='00000000000000000000000001100011'):
        break
    if sam[25:32] in rtype:
        d=r.check(sam[:-1], d)
        pc=pc+4
    elif sam[25:32] in btype:
        pc=b.check(sam[:-1],d,pc)
    elif sam[25:32] in itype:
        if sam[17:20]=="000" and sam[25:32]=="1100111":
            t=i.check(sam[:-1],d,pc,datamem)
            d=t[0]
            pc=t[1]
        else:
            d=i.check(sam[:-1],d,pc,datamem)
            pc=pc+4
    elif sam[25:32] in jtype:
        t=j.check(sam[:-1],d,pc)
        d=t[0]
        pc=t[1]
    elif sam[25:32] in stype:
        datamem=s.check(sam[:-1],d,datamem)
        pc=pc+4
    elif sam[25:32] in utype:
        d=u.check(sam[:-1], d,pc)
        pc=pc+4
    elif sam[25:32] in bonus:
        if sam[0:7]=='0000010':
            sample=sample='0b'+db(pc)+" "
            for iter in d:
                sample+='0b' + d[iter] + " "
            sample+='\n'
            str2=''
            for iter in datamem:
                str2+=(iter+':'+'0b'+datamem[iter]+'\n')
            fout.write(str2)
            exit()
        else:
            d=bon.check(sam,d,pc)
            pc=pc+4
    if(d['00000']!="00000000000000000000000000000000"):
        d['00000']="00000000000000000000000000000000"

    sample='0b'+db(pc)+" "
    for iter in d:
        sample+='0b' + d[iter] + " "
    sample.rstrip()
    sample+="\n"
    fout.write(sample)
    sam=a[pc//4]
    x+=1
fout.write(sample)
str2=''
for iter in datamem:
    str2+=(iter+':'+'0b'+datamem[iter]+'\n')
fout.write(str2)
